AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

  '
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: website.sebiproj.com
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: MyWebsite
              - /*
      Bucket:
        Ref: MyWebsite
  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z08258142KDMD8P5ERABE
      RecordSets:
      - Name: website.sebiproj.com
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName:
            Fn::GetAtt:
            - MyDistribution
            - DomainName
  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: website.sebiproj.com
      ValidationMethod: DNS
  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: website.sebiproj.com.s3-website-us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
        - DomainName: website.sebiproj.com.s3-website-us-east-1.amazonaws.com
          Id: website.sebiproj.com.s3-website-us-east-1.amazonaws.com
          CustomOriginConfig:
            OriginProtocolPolicy: http-only
        ViewerCertificate:
          AcmCertificateArn:
            Ref: MyCertificate
          SslSupportMethod: sni-only
        Aliases:
        - website.sebiproj.com
        Enabled: 'true'
        DefaultRootObject: index.html
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: ID
        AttributeType: S
      KeySchema:
      - AttributeName: ID
        KeyType: HASH
  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: cloud-resume-challenge
      CodeUri: GetFunction
      Handler: get-function
      Runtime: go1.x
      Architectures:
      - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /get
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
    Metadata:
      SamResourceId: GetFunction
  PutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: cloud-resume-challenge
      CodeUri: PutFunction
      Handler: put-function
      Runtime: go1.x
      Architectures:
      - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /put
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
    Metadata:
      SamResourceId: PutFunction
Outputs:
  GetAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get/
  GetFunction:
    Description: First Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetFunction
      - Arn
  GetFunctionIamRole:
    Description: Implicit IAM Role created for get function
    Value:
      Fn::GetAtt:
      - GetFunctionRole
      - Arn
